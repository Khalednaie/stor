[{"/home/khaled/Documents/stor/stor-front/src/index.js":"1","/home/khaled/Documents/stor/stor-front/src/App.js":"2","/home/khaled/Documents/stor/stor-front/src/Routes.js":"3","/home/khaled/Documents/stor/stor-front/src/user/signup.js":"4","/home/khaled/Documents/stor/stor-front/src/user/signin.js":"5","/home/khaled/Documents/stor/stor-front/src/config.js":"6","/home/khaled/Documents/stor/stor-front/src/auth/index.js":"7","/home/khaled/Documents/stor/stor-front/src/auth/PrivateRoute.js":"8","/home/khaled/Documents/stor/stor-front/src/user/UserDashboard.js":"9","/home/khaled/Documents/stor/stor-front/src/auth/AdminRoure.js":"10","/home/khaled/Documents/stor/stor-front/src/user/AdminDashpoard.js":"11","/home/khaled/Documents/stor/stor-front/src/admin/AddCategory.js":"12","/home/khaled/Documents/stor/stor-front/src/admin/apiAdmin.js":"13","/home/khaled/Documents/stor/stor-front/src/admin/AddProduct.js":"14","/home/khaled/Documents/stor/stor-front/src/core/Home.js":"15","/home/khaled/Documents/stor/stor-front/src/core/Shop.js":"16","/home/khaled/Documents/stor/stor-front/src/core/layout.js":"17","/home/khaled/Documents/stor/stor-front/src/core/Card.js":"18","/home/khaled/Documents/stor/stor-front/src/core/apiCore.js":"19","/home/khaled/Documents/stor/stor-front/src/core/Checkbox.js":"20","/home/khaled/Documents/stor/stor-front/src/core/fixedPrices.js":"21","/home/khaled/Documents/stor/stor-front/src/core/Radiobox.js":"22","/home/khaled/Documents/stor/stor-front/src/core/showImage.js":"23","/home/khaled/Documents/stor/stor-front/src/core/Menu.js":"24","/home/khaled/Documents/stor/stor-front/src/core/Search.js":"25","/home/khaled/Documents/stor/stor-front/src/core/Product.js":"26","/home/khaled/Documents/stor/stor-front/src/core/cartHelpers.js":"27","/home/khaled/Documents/stor/stor-front/src/core/Cart.js":"28","/home/khaled/Documents/stor/stor-front/src/core/Checkout.js":"29","/home/khaled/Documents/stor/stor-front/src/admin/orders.js":"30","/home/khaled/Documents/stor/stor-front/src/user/Profile.js":"31","/home/khaled/Documents/stor/stor-front/src/user/apiUser.js":"32","/home/khaled/Documents/stor/stor-front/src/admin/ManageProducts.js":"33","/home/khaled/Documents/stor/stor-front/src/admin/UpdateProduts.js":"34"},{"size":210,"mtime":1610146316729,"results":"35","hashOfConfig":"36"},{"size":93,"mtime":1610145247442,"results":"37","hashOfConfig":"36"},{"size":2013,"mtime":1611900725045,"results":"38","hashOfConfig":"36"},{"size":2421,"mtime":1610231654668,"results":"39","hashOfConfig":"36"},{"size":2675,"mtime":1610333412468,"results":"40","hashOfConfig":"36"},{"size":48,"mtime":1610159259510,"results":"41","hashOfConfig":"36"},{"size":1715,"mtime":1610410380286,"results":"42","hashOfConfig":"36"},{"size":393,"mtime":1610317649465,"results":"43","hashOfConfig":"36"},{"size":3472,"mtime":1611877146548,"results":"44","hashOfConfig":"36"},{"size":427,"mtime":1610331964039,"results":"45","hashOfConfig":"36"},{"size":2256,"mtime":1611878312728,"results":"46","hashOfConfig":"36"},{"size":2273,"mtime":1610416275693,"results":"47","hashOfConfig":"36"},{"size":8757,"mtime":1611917294574,"results":"48","hashOfConfig":"36"},{"size":10859,"mtime":1611639109985,"results":"49","hashOfConfig":"36"},{"size":1910,"mtime":1611223852764,"results":"50","hashOfConfig":"36"},{"size":4363,"mtime":1611012205151,"results":"51","hashOfConfig":"36"},{"size":433,"mtime":1611223792266,"results":"52","hashOfConfig":"36"},{"size":3464,"mtime":1611223956728,"results":"53","hashOfConfig":"36"},{"size":3271,"mtime":1611223775068,"results":"54","hashOfConfig":"36"},{"size":2298,"mtime":1611285508515,"results":"55","hashOfConfig":"36"},{"size":498,"mtime":1611639407558,"results":"56","hashOfConfig":"36"},{"size":1378,"mtime":1611285733453,"results":"57","hashOfConfig":"36"},{"size":367,"mtime":1611223778716,"results":"58","hashOfConfig":"36"},{"size":3654,"mtime":1611223790242,"results":"59","hashOfConfig":"36"},{"size":3778,"mtime":1611223782433,"results":"60","hashOfConfig":"36"},{"size":1840,"mtime":1611223878026,"results":"61","hashOfConfig":"36"},{"size":2480,"mtime":1611223770852,"results":"62","hashOfConfig":"36"},{"size":1800,"mtime":1611223893087,"results":"63","hashOfConfig":"36"},{"size":6047,"mtime":1611545761699,"results":"64","hashOfConfig":"36"},{"size":6093,"mtime":1611917428932,"results":"65","hashOfConfig":"36"},{"size":3329,"mtime":1611805082754,"results":"66","hashOfConfig":"36"},{"size":3030,"mtime":1611851287869,"results":"67","hashOfConfig":"36"},{"size":1958,"mtime":1611903185757,"results":"68","hashOfConfig":"36"},{"size":13468,"mtime":1611917232243,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"ksj79d",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"72"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"72"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/khaled/Documents/stor/stor-front/src/index.js",[],["148","149"],"/home/khaled/Documents/stor/stor-front/src/App.js",[],"/home/khaled/Documents/stor/stor-front/src/Routes.js",[],"/home/khaled/Documents/stor/stor-front/src/user/signup.js",[],"/home/khaled/Documents/stor/stor-front/src/user/signin.js",[],"/home/khaled/Documents/stor/stor-front/src/config.js",[],"/home/khaled/Documents/stor/stor-front/src/auth/index.js",[],"/home/khaled/Documents/stor/stor-front/src/auth/PrivateRoute.js",[],"/home/khaled/Documents/stor/stor-front/src/user/UserDashboard.js",["150"],"/home/khaled/Documents/stor/stor-front/src/auth/AdminRoure.js",[],"/home/khaled/Documents/stor/stor-front/src/user/AdminDashpoard.js",["151"],"/home/khaled/Documents/stor/stor-front/src/admin/AddCategory.js",[],"/home/khaled/Documents/stor/stor-front/src/admin/apiAdmin.js",[],"/home/khaled/Documents/stor/stor-front/src/admin/AddProduct.js",["152","153","154","155","156"],"import React, { useState, useEffect } from 'react';\nimport Layout from '../core/layout';\nimport { isAuthenticated } from '../auth';\nimport { Link } from 'react-router-dom';\nimport { createProduct, getCategories } from './apiAdmin';\n\nconst AddProduct = () => {\n    const [values, setValues] = useState({\n        name: '',\n        description: '',\n        price: '',\n        categories: [],\n        category: '',\n        shipping: '',\n        quantity: '',\n        photo: '',\n        loading: false,\n        error: '',\n        createdProduct: '',\n        redirectToProfile: false,\n        formData: ''\n    });\n\n    const { user, token } = isAuthenticated();\n    const {\n        name,\n        description,\n        price,\n        categories,\n        category,\n        shipping,\n        quantity,\n        loading,\n        error,\n        createdProduct,\n        redirectToProfile,\n        formData\n    } = values;\n\n    // load categories and set form data\n    const init = () => {\n        getCategories().then(data => {\n            if (data.error) {\n                \n                setValues({ ...values, error: data.error });\n            } else {\n                setValues({\n                    ...values,\n                    categories: data,\n                    formData: new FormData()\n                });\n            }\n        });\n    };\n\n    useEffect(() => {\n        init();\n    }, []);\n\n    const handleChange = name => event => {\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\n        formData.set(name, value);\n        setValues({ ...values, [name]: value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, error: '', loading: true });\n\n        createProduct(user._id, token, formData).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setValues({\n                    ...values,\n                    name: '',\n                    description: '',\n                    photo: '',\n                    price: '',\n                    quantity: '',\n                    loading: false,\n                    createdProduct: data.name\n                });\n            }\n        });\n    };\n\n    const newPostForm = () => (\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\n            <h4>Post Photo</h4>\n            <div className=\"form-group\">\n                <label className=\"btn btn-secondary\">\n                    <input onChange={handleChange('photo')} type=\"file\" name=\"photo\" accept=\"image/*\" />\n                </label>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Description</label>\n                <textarea onChange={handleChange('description')} className=\"form-control\" value={description} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Price</label>\n                <input onChange={handleChange('price')} type=\"number\" className=\"form-control\" value={price} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Category</label>\n                <select onChange={handleChange('category')} className=\"form-control\">\n                    <option>Please select</option>\n                    {categories &&\n                        categories.map((c, i) => (\n                            <option key={i} value={c._id}>\n                                {c.name}\n                            </option>\n                        ))}\n                </select>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Shipping</label>\n                <select onChange={handleChange('shipping')} className=\"form-control\">\n                    <option>Please select</option>\n                    <option value=\"0\">No</option>\n                    <option value=\"1\">Yes</option>\n                </select>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Quantity</label>\n                <input onChange={handleChange('quantity')} type=\"number\" className=\"form-control\" value={quantity} />\n            </div>\n\n            <button className=\"btn btn-outline-primary\">Create Product</button>\n        </form>\n    );\n\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = () => (\n        <div className=\"alert alert-info\" style={{ display: createdProduct ? '' : 'none' }}>\n            <h2>{`${createdProduct}`} is created!</h2>\n        </div>\n    );\n\n    const showLoading = () =>\n        loading && (\n            <div className=\"alert alert-success\">\n                <h2>Loading...</h2>\n            </div>\n        );\n\n    return (\n        <Layout title=\"Add a new product\" description={`G'day ${user.name}, ready to add a new product?`}>\n            <div className=\"row\">\n                <div className=\"col-md-8 offset-md-2\">\n                    {showLoading()}\n                    {showSuccess()}\n                    {showError()}\n                    {newPostForm()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default AddProduct;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React,{useState , useEffect} from 'react'\n// import Layout from '../core/layout';\n// import {isAuthenticated} from '../auth';\n// // import {Link} from 'react-router-dom';\n// import {createProduct ,getCategories} from './apiAdmin'\n\n\n// const AddProduct = ()=>{\n//  const [values ,setValues] = useState({\n//        name:'',\n//        description:'',\n//        price:'',\n//        categories:[],\n//        category:'',\n//        shipping :'',\n//        quantity:'',\n//        photo : '',\n//        loading: false,\n//        error : '',\n//        createdProduct:'',\n//        redirectToProfile : false,\n//        formData:''\n//  })\n\n// const {user ,token} = isAuthenticated();\n\n//  const {\n//     name,\n//     description,\n//     price,\n//     categories,\n//     category,\n//     shipping ,\n//     quantity,\n//     loading,\n//     error,\n//     createdProduct,\n//     redirectToProfile ,\n//     formData\n//  }=values;\n\n// // lode categories and send form data\n// const init = ()=>{\n//     getCategories().then(data=>{\n//         if(data.err){\n//             setValues({...values ,error:data.err})\n//         } else {\n//             setValues({...values,categories:data ,formData: new FormData()})\n//         }\n//     })\n// }\n\n//  useEffect(()=>{\n//     init(); \n//   },[]);\n\n// const handleChange = name=> event=>{\n//   const value = name === 'photo' ? event.target.files[0] : event.target.value;\n//   formData.set(name ,value);\n//   console.log(formData)\n//   setValues({...values , [name]: value});       \n//     };\n\n// const clickSubmit =(event)=>{\n//     event.preventDefault()\n//     setValues({...values,error:'',loading:true});\n//     createProduct(user._id,token ,formData).then(data=>{\n//     if(data===undefined){\n//         setValues({\n//             ...values ,\n//             error:undefined\n//         })\n//     } else {\n//         setValues({\n//             ...values ,\n//             name : '',\n//             description: '',\n//             photo:'',\n//             price:'',\n//             quantity:'',\n//             loading:false,\n//             createdProduct:data.name\n//         })\n//     }\n//  });\n//   };\n\n//  const newPostForm=()=>(\n//      <form className='mb-3' onSubmit={clickSubmit}>\n//          <h4>Post Photo</h4>\n//          <div className='form-group'>\n//              <label className='btn btn-secondary'>\n//              <input onChange={handleChange('photo')} type='file' name='photo' accept='image/*' />\n//             </label>\n//          </div>\n//          <div className='form-group'>\n//              <label>Name</label>\n//              <input onChange={handleChange('name')}  type='text' className='form-control' value={name} />\n//          </div>\n//          <div className='form-group'>\n//              <label>description</label>\n//              <textarea onChange={handleChange('description')} type='text' className='form-control' value={description} />\n//          </div>\n//          <div className='form-group'>\n//              <label>Price</label>\n//              <input onChange={handleChange('price')} type='number' className='form-control' value={price} />\n//          </div>\n//          <div className='form-group'>\n//              <label>Category</label>\n//               <select onChange={handleChange('category')} className='form-control'>\n//                  <option >Please select</option>\n//                  {categories && categories.map((c,i)=>(\n//                      <option key={i} value={c._id}>\n//                          {c.name}\n                         \n//                      </option>\n                     \n//                  ))}\n//              </select>\n//          </div>\n//          <div className='form-group'>\n//              <label>Shipping</label>\n//              <select onChange={handleChange('shipping')} className='form-control'>\n//                  <option >Please select</option>\n//                  <option value='0'>No</option>\n//                  <option value='1'>Yes</option>\n//              </select>\n//          </div>\n//          <div className='form-group'>\n//              <label>Quantity</label>\n//              <input onChange={handleChange('quantity')} type='number' className='form-control' value={quantity} />\n//          </div>\n//         <button  className='btn btn-outline-primary'>CreateProduct</button>\n//      </form>\n//  )\n\n//  const showError =()=>(\n//      <div className='alert alert-danger' style={{display: error  ? '' : 'none'}}>\n//          {error}\n//      </div>\n//  )\n\n//  const showSuccess =()=>(\n//      <div className='alert alert-info' style={{display: createdProduct  ? '' : 'none'}}>\n//         <h2>{`${createdProduct}`} is create!</h2>\n//      </div>\n//  )\n\n//  const showLoding =()=>(\n//      loading && (<div className='alert alert-success'><h2>loading...</h2></div>)\n//  )\n\n//     return(\n//         <Layout title='Add a new create product' description={`G'day ${user.name},read to add a new product`}>\n//         <div className='row'>\n//         <div className='col-md-8 offset-md-2'>\n//            {showLoding()}\n//            {showSuccess()}\n//            {showError()}\n//            {newPostForm()}\n//         </div>\n//         </div> \n\n//         </Layout>\n//     )\n// }\n\n// export default AddProduct;\n\n\n\n\n\n\n","/home/khaled/Documents/stor/stor-front/src/core/Home.js",["157"],"import React, { useState, useEffect } from 'react';\nimport Layout from './layout';\nimport { getProducts } from './apiCore';\nimport Card from './Card';\nimport Search from './Search';\n\nconst Home = () => {\n    const [productsBySell, setProductsBySell] = useState([]);\n    const [productsByArrival, setProductsByArrival] = useState([]);\n    const [error, setError] = useState(false);\n\n    const loadProductsBySell = () => {\n        getProducts('sold').then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setProductsBySell(data);\n            }\n        });\n    };\n\n    const loadProductsByArrival = () => {\n        getProducts('createdAt').then(data => {\n            console.log(data);\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setProductsByArrival(data);\n            }\n        });\n    };\n\n    useEffect(() => {\n        loadProductsByArrival();\n        loadProductsBySell();\n    }, []);\n\n    return (\n        <Layout\n            title=\"FullStack React Node MongoDB Ecommerce App\"\n            description=\"Node React E-commerce App\"\n            className=\"container-fluid\"\n        >\n            <Search />\n            <h2 className=\"mb-4\">New Arrivals</h2>\n            <div className=\"row\">\n                {productsByArrival.map((product, i) => (\n                    <div key={i} className=\"col-4 mb-3\">\n                        <Card product={product} />\n                    </div>\n                ))}\n            </div>\n\n            <h2 className=\"mb-4\">Best Sellers</h2>\n            <div className=\"row\">\n                {productsBySell.map((product, i) => (\n                    <div key={i} className=\"col-4 mb-3\">\n                        <Card product={product} />\n                    </div>\n                ))}\n            </div>\n        </Layout>\n    );\n};\n\nexport default Home;","/home/khaled/Documents/stor/stor-front/src/core/Shop.js",["158","159","160","161"],"import React ,{useState,useEffect} from \"react\";\nimport Layout from \"./layout\";\nimport  Card from './Card';\nimport {getCategories,getFilteredProducts} from './apiCore';\nimport Checkbox from './Checkbox';\nimport RadioBox from './Radiobox';\nimport {prices} from './fixedPrices';\n\n\nconst Shop = ()=>{\n    const [myFilters ,setMyFilters] = useState({\n        filters:{category:[],price:[]}\n    })\n    const [categories,setCategories]=useState([]);\n    const [error ,setError]=useState(false);\n    const [limit ,setLimit]=useState(6);\n    const [skip ,setSkip]=useState(0);\n    const [size ,setSize]=useState(0);\n    const [filteredResults ,setFilteredResults]=useState([]);\n    \n    const init1 = ()=>{\n        \n    getCategories().then(data=>{\n        console.log('in init1 data',data.error)\n        if(data.error){\n            setError(data.error)\n           \n        } else {\n            setCategories(data)\n             console.log('in fun init1',data)\n        }\n    })\n}\nconst loadFilteredResults =(newFilters)=>{\n        console.log('newFilters',newFilters)\n        getFilteredProducts(skip,limit,newFilters).then(data=>{\n            if(data.error){\n                setError(data.error)\n            }else{\n                setFilteredResults(data.data)\n                setSize(data.size);\n                setSkip(0)\n            }\n        })\n    };\n\nconst loadMore =()=>{\n    let toSkip = skip + limit\n        // console.log('newFilters',newFilters)\n        getFilteredProducts(toSkip,limit,myFilters.filters).then(data=>{\n            if(data.error){\n                setError(data.error)\n            }else{\n                setFilteredResults([...filteredResults, ...data.data])\n                setSize(data.size);\n                setSkip(toSkip)\n            }\n        })\n    };  \n    \nconst loadMoreButton = ()=>{\n    return (\n        size > 0 && size >= limit && (\n            <button onClick={loadMore} className='btn btn-warning mb-5'>Load more</button>\n        )\n    )\n}\n\n    useEffect(()=>{\n        init1()\n        loadFilteredResults(skip,limit,myFilters.filters)\n    }, [])\n\n    const handelFilters = (filters,filterBy)=>{\n        console.log('SHOP',filters,filterBy)\n        const newFilters ={...myFilters}\n        console.log('filter in handelFilter',myFilters)\n        newFilters.filters[filterBy]=filters\n\n        if(filterBy==='price'){\n            let priceValues = handelPrice(filters);\n            newFilters.filters[filterBy]=priceValues;\n        }\n        loadFilteredResults(myFilters.filters)\nconsole.log('newfilter',newFilters)\n        setMyFilters(newFilters)\n    } ;\n\n    const handelPrice =value=>{\n        const data = prices\n        let array =[];\n\n        for(let key in data){\n            if(data[key]._id === parseInt(value)){\n                array =data[key].array;\n            }\n        }\n        return array;\n    };\n\n    \n\n    return(\n      <Layout title='Shop Page' description='Serch and find books of your choice' className='container-fluid'>        \n         <div className='row'>\n             <div className='col-4'>\n                 {console.log('in comp',categories)}\n                 \n                 <h4>Filter by categories</h4>\n                 <ul>\n                     <Checkbox  categories={categories} \n                                handelFilters=\n                                {filters=> handelFilters(filters,'category')} />\n                 </ul>\n                 <h4>Filter by Price Range</h4>\n                 <div>\n                     <RadioBox  \n                                prices={prices} \n                                handelFilters={filters=> \n                                handelFilters(filters,'price')} />\n                 </div>\n             </div>\n             <div className='col-8'>\n                 {JSON.stringify(filteredResults),\n                  console.log('in load com:',filteredResults)\n                 }\n                 <h2 className='mb-4'>Products</h2>\n                 <div className='row'>\n                    {filteredResults.map((product,i)=>(\n                    <div key={i} className='col-4 mb-3'>\n                        <Card product={product}/>\n                    </div>\n                    ))}\n                 </div>\n                 <hr />\n                 {loadMoreButton()}\n             </div>\n         </div>\n      </Layout>\n    )\n}\nexport default Shop;","/home/khaled/Documents/stor/stor-front/src/core/layout.js",[],"/home/khaled/Documents/stor/stor-front/src/core/Card.js",[],"/home/khaled/Documents/stor/stor-front/src/core/apiCore.js",[],"/home/khaled/Documents/stor/stor-front/src/core/Checkbox.js",["162"],"import React ,{useState,useEffect} from 'react'\n\n\nconst Checkbox = ({categories ,handelFilters}) =>{\n    const [checked,setChecked]=useState([])\n\n    const handleToggle = c =>()=>{\n        //return the first index or -1\n        const currentCategoryId = checked.indexOf(c)\n        const newCheckedCategoryId=[...checked]\n        //if currently checked was not already in checked statet > push\n        //else pull/take off\n        if(currentCategoryId === -1){\n            newCheckedCategoryId.push(c)\n        }else {\n            newCheckedCategoryId.splice(currentCategoryId,1)\n        }\n        console.log(newCheckedCategoryId)\n        setChecked(newCheckedCategoryId)\n        handelFilters(newCheckedCategoryId)\n    }\n\n    return categories.map((c,i)=>(\n        <li key={i} className='list-unstyled'>\n            <input onChange={handleToggle(c._id)} value={checked.indexOf(c._id===-1)} type='checkbox'className='form-check-input'/>\n            <label className='form-check-label'>{c.name}</label>\n        </li>\n    ))\n}\n\nexport default Checkbox;\n\n\n// import React, { useState } from \"react\";\n\n// const Checkbox = ({ categories, handleFilters }) => {\n//     const [checked, setCheked] = useState([]);\n\n//     const handleToggle = c => () => {\n//         // return the first index or -1\n//         const currentCategoryId = checked.indexOf(c);\n//         const newCheckedCategoryId = [...checked];\n//         // if currently checked was not already in checked state > push\n//         // else pull/take off\n//         if (currentCategoryId === -1) {\n//             newCheckedCategoryId.push(c);\n//         } else {\n//             newCheckedCategoryId.splice(currentCategoryId, 1);\n//         }\n//         // console.log(newCheckedCategoryId);\n//         setCheked(newCheckedCategoryId);\n//         handleFilters(newCheckedCategoryId);\n//     };\n\n//     return categories.map((c, i) => (\n//         <li key={i} className=\"list-unstyled\">\n//             <input\n//                 onChange={handleToggle(c._id)}\n//                 value={checked.indexOf(c._id === -1)}\n//                 type=\"checkbox\"\n//                 className=\"form-check-input\"\n//             />\n//             <label className=\"form-check-label\">{c.name}</label>\n//         </li>\n//     ));\n// };\n\n// export default Checkbox;","/home/khaled/Documents/stor/stor-front/src/core/fixedPrices.js",[],"/home/khaled/Documents/stor/stor-front/src/core/Radiobox.js",["163"],"import {useState} from 'react';\n\nconst RadioBox = ({prices ,handelFilters })=>{\n    const [value ,setValue]=useState(0);\n    \n    const handleChange = (event)=>{\n        handelFilters(event.target.value);\n        setValue(event.target.value);\n    }; \n    return prices.map((p,i)=>(\n        <div key={i} >\n            <input \n                onChange={handleChange} \n                value={`${p._id}`} \n                name={p}\n                type='radio'\n                className='mr-2 ml-4'\n                />\n            <label \n                className='form-check-label'>\n                    {p.name}\n            </label>\n        </div>\n    ))\n}\n\nexport default RadioBox;\n\n\n// import React, { useState } from \"react\";\n\n// const RadioBox = ({ prices, handleFilters }) => {\n//     const [value, setValue] = useState(0);\n\n//     const handleChange = event => {\n//         handleFilters(event.target.value);\n//         setValue(event.target.value);\n//     };\n\n//     return prices.map((p, i) => (\n//         <div key={i}>\n//             <input\n//                 onChange={handleChange}\n//                 value={`${p._id}`}\n//                 name={p}\n//                 type=\"radio\"\n//                 className=\"mr-2 ml-4\"\n//             />\n//             <label className=\"form-check-label\">{p.name}</label>\n//         </div>\n//     ));\n// };\n\n// export default RadioBox;","/home/khaled/Documents/stor/stor-front/src/core/showImage.js",[],"/home/khaled/Documents/stor/stor-front/src/core/Menu.js",[],"/home/khaled/Documents/stor/stor-front/src/core/Search.js",[],"/home/khaled/Documents/stor/stor-front/src/core/Product.js",["164"],"import React, { useState, useEffect } from 'react';\nimport Layout from './layout';\nimport { read, listRelated } from './apiCore';\nimport Card from './Card';\n\nconst Product = props => {\n    const [product, setProduct] = useState({});\n    const [relatedProduct, setRelatedProduct] = useState([]);\n    const [error, setError] = useState(false);\n\n    const loadSingleProduct = productId => {\n        read(productId).then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setProduct(data);\n                // fetch related products\n                listRelated(data._id).then(data => {\n                    if (data.error) {\n                        setError(data.error);\n                    } else {\n                        setRelatedProduct(data);\n                    }\n                });\n            }\n        });\n    };\n\n    useEffect(() => {\n        const productId = props.match.params.productId;\n        loadSingleProduct(productId);\n    }, [props]);\n\n    return (\n        <Layout\n            title={product && product.name}\n            description={product && product.description && product.description.substring(0, 100)}\n            className=\"container-fluid\"\n        >\n            <div className=\"row\">\n                <div className=\"col-8\">\n                    {product && product.description && <Card product={product} showViewProductButton={false} />}\n                </div>\n\n                <div className=\"col-4\">\n                    <h4>Related products</h4>\n                    {relatedProduct.map((p, i) => (\n                        <div className=\"mb-3\" key={i}>\n                            <Card product={p} />\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default Product;","/home/khaled/Documents/stor/stor-front/src/core/cartHelpers.js",["165","166"],"export const addItem = (item = [], count = 0, next = f => f) => {\n    let cart = [];\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n        }\n        cart.push({\n            ...item,\n            count: 1\n        });\n\n        // remove duplicates\n        // build an Array from new Set and turn it back into array using Array.from\n        // so that later we can re-map it\n        // new set will only allow unique values in it\n        // so pass the ids of each object/product\n        // If the loop tries to add the same value again, it'll get ignored\n        // ...with the array of ids we got on when first map() was used\n        // run map() on it again and return the actual product from the cart\n\n        cart = Array.from(new Set(cart.map(p => p._id))).map(id => {\n            return cart.find(p => p._id === id);\n        });\n\n        localStorage.setItem('cart', JSON.stringify(cart));\n        next();\n    }\n};\n\nexport const itemTotal = () => {\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            return JSON.parse(localStorage.getItem('cart')).length;\n        }\n    }\n    return 0;\n};\n\nexport const getCart = () => {\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            return JSON.parse(localStorage.getItem('cart'));\n        }\n    }\n    return [];\n};\n\nexport const updateItem = (productId, count) => {\n    let cart = [];\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n        }\n\n        cart.map((product, i) => {\n            if (product._id === productId) {\n                cart[i].count = count;\n            }\n        });\n\n        localStorage.setItem('cart', JSON.stringify(cart));\n    }\n};\n\nexport const removeItem = productId => {\n    let cart = [];\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n        }\n\n        cart.map((product, i) => {\n            if (product._id === productId) {\n                cart.splice(i, 1);\n            }\n        });\n\n        localStorage.setItem('cart', JSON.stringify(cart));\n    }\n    return cart;\n};\n\nexport const emptyCart = next => {\n    if (typeof window !== 'undefined') {\n        localStorage.removeItem('cart');\n        next();\n    }\n};","/home/khaled/Documents/stor/stor-front/src/core/Cart.js",[],"/home/khaled/Documents/stor/stor-front/src/core/Checkout.js",["167","168","169","170"],"import React, { useState, useEffect } from 'react';\nimport { getProducts, getBraintreeClientToken, processPayment, createOrder } from './apiCore';\nimport { emptyCart } from './cartHelpers';\nimport Card from './Card';\nimport { isAuthenticated } from '../auth';\nimport { Link } from 'react-router-dom';\n// import \"braintree-web\"; // not using this package\nimport DropIn from 'braintree-web-drop-in-react';\n\nconst Checkout = ({ products, setRun = f => f, run = undefined }) => {\n    const [data, setData] = useState({\n        loading: false,\n        success: false,\n        clientToken: null,\n        error: '',\n        instance: {},\n        address: ''\n    });\n\nconst userId = isAuthenticated() && isAuthenticated().user._id;\nconst token = isAuthenticated() && isAuthenticated().token;\n\nconst getToken = (userId, token) => {\n        getBraintreeClientToken(userId, token).then(data => {\n            if (data.error) {\n                console.log(data.error);\n                setData({ ...data, error: data.error });\n            } else {\n                console.log(data);\n                setData({ clientToken: data.clientToken });\n            }\n        });\n    };\n\n    useEffect(() => {\n        getToken(userId, token);\n    }, []);\n\nconst handleAddress = event => {\n        setData({ ...data, address: event.target.value });\n    };\n\nconst getTotal = () => {\n        return products.reduce((currentValue, nextValue) => {\n            return currentValue + nextValue.count * nextValue.price;\n        }, 0);\n    };\n\nconst showCheckout = () => {\n        return isAuthenticated() ? (\n            <div>{showDropIn()}</div>\n        ) : (\n            <Link to=\"/signin\">\n                <button className=\"btn btn-primary\">Sign in to checkout</button>\n            </Link>\n        );\n    };\n\n    let deliveryAddress = data.address;\n\nconst buy = () => {  \n        setData({ loading: true });\n        // send the nonce to your server\n        // nonce = data.instance.requestPaymentMethod()\n        let nonce;\n        let getNonce = data.instance\n            .requestPaymentMethod()\n            .then(data => {\n                // console.log(data);\n                nonce = data.nonce;\n                // once you have nonce (card type, card number) send nonce as 'paymentMethodNonce'\n                // and also total to be charged\n                console.log(\n                    \"send nonce and total to process: \",\n                    nonce,\n                    getTotal(products)\n                );\n        const paymentData = {\n             paymentMethodNonce: nonce,\n             amount: getTotal(products)\n         };\n\n        processPayment(userId, token, paymentData)\n            .then(response => {\n                console.log('processPayment:response:',response);\n                setData({...data ,success:response.success})\n                // empty cart\n                // create order\n\n        const createOrderData = {\n                    products: products,\n                    transaction_id: response.transaction.id,\n                    amount: response.transaction.amount,\n                    address: deliveryAddress\n                };\n\n                createOrder(userId, token, createOrderData)\n                    .then(response => {\n                        emptyCart(() => {\n                            setRun(!run); // run useEffect in parent Cart\n                            console.log('payment success and empty cart');\n                            setData({\n                                loading: false,\n                                success: true\n                            });\n                        });\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        setData({ loading: false });\n                    });\n            })\n            .catch(error => {\n                console.log(error);\n                setData({ loading: false });\n            });\n    })\n            .catch(error => {\n                console.log(\"dropin error: \", error);\n                setData({ ...data, error: error.message });\n            });\n    };\n\nconst showDropIn = () => (\n        <div onBlur={() => setData({ ...data, error: '' })}>\n            {data.clientToken !== null && products.length > 0 ? (\n                <div>\n                    <div className=\"gorm-group mb-3\">\n                        <label className=\"text-muted\">Delivery address:</label>\n                        <textarea\n                            onChange={handleAddress}\n                            className=\"form-control\"\n                            value={data.address}\n                            placeholder=\"Type your delivery address here...\"\n                        />\n                    </div>\n\n                    <DropIn\n                        options={{\n                            authorization: data.clientToken,\n                            paypal: {\n                                flow: 'vault'\n                            }\n                        }}\n                        onInstance={instance => (data.instance = instance)}\n                    />\n                    <button onClick={buy} className=\"btn btn-success btn-block\">\n                        Pay\n                    </button>\n                </div>\n            ) : null}\n        </div>\n    );\n\n    const showError = error => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = success => (\n        <div className=\"alert alert-info\" style={{ display: success ? '' : 'none' }}>\n            Thanks! Your payment was successful!{success}\n        </div>\n    );\n\n    const showLoading = loading => loading && <h2 className=\"text-danger\">Loading...</h2>;\n\n    return (\n        <div>\n            <h2>Total: ${getTotal()}</h2>\n            {showLoading(data.loading)}\n            {showSuccess(data.success)}\n            {showError(data.error)}\n            {showCheckout()}\n        </div>\n    );\n};\n\nexport default Checkout;","/home/khaled/Documents/stor/stor-front/src/admin/orders.js",["171","172"],"/home/khaled/Documents/stor/stor-front/src/user/Profile.js",["173","174","175"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../core/layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { read, update, updateUser } from \"./apiUser\";\n\nconst Profile = ({ match }) => {\n    const [values, setValues] = useState({\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        error: false,\n        success: false\n    });\n\n    const { token } = isAuthenticated();\n    const { name, email, password, error, success } = values;\n\n    const init = userId => {\n        // console.log(userId);\n        read(userId, token).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: true });\n            } else {\n                setValues({ ...values, name: data.name, email: data.email });\n            }\n        });\n    };\n\n    useEffect(() => {\n        init(match.params.userId);\n    }, []);\n\n    const handleChange = name => e => {\n        setValues({ ...values, error: false, [name]: e.target.value });\n    };\n\n    const clickSubmit = e => {\n        e.preventDefault();\n        update(match.params.userId, token, { name, email, password }).then(\n            data => {\n                if (data.error) {\n                    console.lgo(data.error);\n                } else {\n                    updateUser(data, () => {\n                        setValues({\n                            ...values,\n                            name: data.name,\n                            email: data.email,\n                            success: true\n                        });\n                    });\n                }\n            }\n        );\n    };\n\n    const redirectUser = success => {\n        if (success) {\n            return <Redirect to=\"/cart\" />;\n        }\n    };\n\n    const profileUpdate = (name, email, password) => (\n        <form>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input\n                    type=\"text\"\n                    onChange={handleChange(\"name\")}\n                    className=\"form-control\"\n                    value={name}\n                />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Email</label>\n                <input\n                    type=\"email\"\n                    onChange={handleChange(\"email\")}\n                    className=\"form-control\"\n                    value={email}\n                />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Password</label>\n                <input\n                    type=\"password\"\n                    onChange={handleChange(\"password\")}\n                    className=\"form-control\"\n                    value={password}\n                />\n            </div>\n\n            <button onClick={clickSubmit} className=\"btn btn-primary\">\n                Submit\n            </button>\n        </form>\n    );\n\n    return (\n        <Layout\n            title=\"Profile\"\n            description=\"Update your profile\"\n            className=\"container-fluid\"\n        >\n            <h2 className=\"mb-4\">Profile update</h2>\n            {profileUpdate(name, email, password)}\n            {redirectUser(success)}\n        </Layout>\n    );\n};\n\nexport default Profile;","/home/khaled/Documents/stor/stor-front/src/user/apiUser.js",[],"/home/khaled/Documents/stor/stor-front/src/admin/ManageProducts.js",["176"],"/home/khaled/Documents/stor/stor-front/src/admin/UpdateProduts.js",["177","178","179","180"],{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":26,"column":7,"nodeType":"187","endLine":26,"endColumn":9,"suggestions":"188"},{"ruleId":"189","severity":1,"message":"190","line":5,"column":17,"nodeType":"191","messageId":"192","endLine":5,"endColumn":20},{"ruleId":"189","severity":1,"message":"193","line":4,"column":10,"nodeType":"191","messageId":"192","endLine":4,"endColumn":14},{"ruleId":"189","severity":1,"message":"194","line":30,"column":9,"nodeType":"191","messageId":"192","endLine":30,"endColumn":17},{"ruleId":"189","severity":1,"message":"195","line":31,"column":9,"nodeType":"191","messageId":"192","endLine":31,"endColumn":17},{"ruleId":"189","severity":1,"message":"196","line":36,"column":9,"nodeType":"191","messageId":"192","endLine":36,"endColumn":26},{"ruleId":"185","severity":1,"message":"197","line":58,"column":8,"nodeType":"187","endLine":58,"endColumn":10,"suggestions":"198"},{"ruleId":"189","severity":1,"message":"199","line":10,"column":12,"nodeType":"191","messageId":"192","endLine":10,"endColumn":17},{"ruleId":"189","severity":1,"message":"199","line":15,"column":12,"nodeType":"191","messageId":"192","endLine":15,"endColumn":17},{"ruleId":"189","severity":1,"message":"200","line":16,"column":19,"nodeType":"191","messageId":"192","endLine":16,"endColumn":27},{"ruleId":"185","severity":1,"message":"201","line":72,"column":8,"nodeType":"187","endLine":72,"endColumn":10,"suggestions":"202"},{"ruleId":"203","severity":1,"message":"204","line":124,"column":50,"nodeType":"205","messageId":"206","endLine":124,"endColumn":51},{"ruleId":"189","severity":1,"message":"207","line":1,"column":25,"nodeType":"191","messageId":"192","endLine":1,"endColumn":34},{"ruleId":"189","severity":1,"message":"208","line":4,"column":12,"nodeType":"191","messageId":"192","endLine":4,"endColumn":17},{"ruleId":"189","severity":1,"message":"199","line":9,"column":12,"nodeType":"191","messageId":"192","endLine":9,"endColumn":17},{"ruleId":"209","severity":1,"message":"210","line":55,"column":31,"nodeType":"211","messageId":"212","endLine":55,"endColumn":33},{"ruleId":"209","severity":1,"message":"210","line":72,"column":31,"nodeType":"211","messageId":"212","endLine":72,"endColumn":33},{"ruleId":"189","severity":1,"message":"213","line":2,"column":10,"nodeType":"191","messageId":"192","endLine":2,"endColumn":21},{"ruleId":"189","severity":1,"message":"214","line":4,"column":8,"nodeType":"191","messageId":"192","endLine":4,"endColumn":12},{"ruleId":"185","severity":1,"message":"215","line":37,"column":8,"nodeType":"187","endLine":37,"endColumn":10,"suggestions":"216"},{"ruleId":"189","severity":1,"message":"217","line":66,"column":13,"nodeType":"191","messageId":"192","endLine":66,"endColumn":21},{"ruleId":"189","severity":1,"message":"193","line":4,"column":10,"nodeType":"191","messageId":"192","endLine":4,"endColumn":14},{"ruleId":"185","severity":1,"message":"218","line":37,"column":8,"nodeType":"187","endLine":37,"endColumn":10,"suggestions":"219"},{"ruleId":"189","severity":1,"message":"193","line":4,"column":10,"nodeType":"191","messageId":"192","endLine":4,"endColumn":14},{"ruleId":"189","severity":1,"message":"199","line":17,"column":36,"nodeType":"191","messageId":"192","endLine":17,"endColumn":41},{"ruleId":"185","severity":1,"message":"220","line":32,"column":8,"nodeType":"187","endLine":32,"endColumn":10,"suggestions":"221"},{"ruleId":"185","severity":1,"message":"222","line":34,"column":7,"nodeType":"187","endLine":34,"endColumn":9,"suggestions":"223"},{"ruleId":"189","severity":1,"message":"193","line":4,"column":10,"nodeType":"191","messageId":"192","endLine":4,"endColumn":14},{"ruleId":"189","severity":1,"message":"194","line":235,"column":9,"nodeType":"191","messageId":"192","endLine":235,"endColumn":17},{"ruleId":"189","severity":1,"message":"195","line":236,"column":9,"nodeType":"191","messageId":"192","endLine":236,"endColumn":17},{"ruleId":"185","severity":1,"message":"224","line":280,"column":8,"nodeType":"187","endLine":280,"endColumn":10,"suggestions":"225"},"no-native-reassign",["226"],"no-negated-in-lhs",["227"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: '_id' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["228"],"no-unused-vars","'_id' is assigned a value but never used.","Identifier","unusedVar","'Link' is defined but never used.","'category' is assigned a value but never used.","'shipping' is assigned a value but never used.","'redirectToProfile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.",["229"],"'error' is assigned a value but never used.","'setLimit' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'limit', 'loadFilteredResults', 'myFilters.filters', and 'skip'. Either include them or remove the dependency array.",["230"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'useEffect' is defined but never used.","'value' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'getProducts' is defined but never used.","'Card' is defined but never used.","React Hook useEffect has missing dependencies: 'token' and 'userId'. Either include them or remove the dependency array.",["231"],"'getNonce' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadOrders' and 'loadStatusValues'. Either include them or remove the dependency array.",["232"],"React Hook useEffect has missing dependencies: 'init' and 'match.params.userId'. Either include them or remove the dependency array.",["233"],"React Hook useEffect has a missing dependency: 'destroy'. Either include it or remove the dependency array.",["234"],"React Hook useEffect has missing dependencies: 'init' and 'match.params.productId'. Either include them or remove the dependency array.",["235"],"no-global-assign","no-unsafe-negation",{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},"Update the dependencies array to be: [_id, token]",{"range":"252","text":"253"},"Update the dependencies array to be: [init]",{"range":"254","text":"255"},"Update the dependencies array to be: [limit, loadFilteredResults, myFilters.filters, skip]",{"range":"256","text":"257"},"Update the dependencies array to be: [token, userId]",{"range":"258","text":"259"},"Update the dependencies array to be: [loadOrders, loadStatusValues]",{"range":"260","text":"261"},"Update the dependencies array to be: [init, match.params.userId]",{"range":"262","text":"263"},"Update the dependencies array to be: [destroy]",{"range":"264","text":"265"},"Update the dependencies array to be: [init, match.params.productId]",{"range":"266","text":"267"},[701,703],"[_id, token]",[1384,1386],"[init]",[2077,2079],"[limit, loadFilteredResults, myFilters.filters, skip]",[1225,1227],"[token, userId]",[1026,1028],"[loadOrders, loadStatusValues]",[917,919],"[init, match.params.userId]",[904,906],"[destroy]",[8946,8948],"[init, match.params.productId]"]